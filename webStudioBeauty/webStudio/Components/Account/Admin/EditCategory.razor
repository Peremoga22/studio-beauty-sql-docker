@page "/edit-category"
@page "/edit-category/{Id:int}"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using webStudio.Data
@using webStudio.Models
@using webStudio.Services
@using Microsoft.AspNetCore.Authorization
@using webStudio.Components.Layout

@inject UserManager<ApplicationUser> _userManager
@inject AuthenticationStateProvider _authState
@inject NavigationManager _navigationManager
@inject CategoryService _categoryService
@inject IJSRuntime _jSRuntime
@layout AdminLayout
@attribute [Authorize(Roles = "Admin")]


<div class="container my-4">
    @if (Id == 0)
    {

        <nav aria-label="breadcrumb" class="bg-light rounded px-3 py-4 mb-4">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="/admin-category" style="color: #f8b7d8;">Повернутися до категорій</a></li>
                <li class="breadcrumb-item active" aria-current="page">Додати категорію</li>
            </ol>
        </nav>
    }
    else
    {
        <nav aria-label="breadcrumb" class="bg-light rounded px-3 py-4 mb-4">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="/admin-category" style="color: #f8b7d8;">Повернутися до категорій</a></li>
                <li class="breadcrumb-item active" aria-current="page">Редагувати категорію</li>
            </ol>
        </nav>
    }

    <div class="d-flex justify-content-center">
        <EditForm Model="@model" method="post" OnSubmit="HandleValidSubmit"
                  FormName="Category"
                  class="card shadow-sm border rounded-3 p-4 bg-white"
                  style="width: 100%; max-width: 600px;">

            <DataAnnotationsValidator />
            <ValidationSummary class="alert alert-danger small" />

            <div class="card-body">
                <h5 class="card-title text-center mb-3 text-dark fw-bold">
                    @(Id == 0 ? "Створити категорію" : "Редагувати категорію")
                </h5>

                <div class="mb-3">
                    <label for="InputCategory_Name" class="form-label fw-semibold small">
                        Назва категорії <span class="text-danger">*</span>
                    </label>
                    <InputText @bind-Value="InputCategory.Name" id="InputCategory_Name"
                               class="form-control form-control-sm"
                               placeholder="Введіть назву..." />
                    <ValidationMessage For="@(() => InputCategory.Name)" class="text-danger small" />
                </div>

                <div class="d-flex justify-content-end gap-2 mt-3">
                    <button type="submit" class="btn btn-sm btn-primary px-3">
                        <i class="bi bi-save"></i> Зберегти
                    </button>
                    <NavLink class="btn btn-sm btn-outline-secondary px-3" href="/admin-category">
                        <i class="bi bi-x-circle"></i> Скасувати
                    </NavLink>
                </div>
            </div>
        </EditForm>
    </div>

</div>





@code {
    private Category model = new() ;

    [Parameter]
    public int Id { get; set; }
    [SupplyParameterFromForm]
    private InputModel InputCategory { get; set; } = new();
    private List<Category> categories = new();

    protected override async Task OnInitializedAsync()
    {
        var state = await _authState.GetAuthenticationStateAsync();
        model.UserId =  _userManager.GetUserId(state.User);

        if (Id != 0)
        {
            model = await _categoryService.Edit(Id);
            InputCategory.Name = model.NameCategory;
        }               
    }

    private async Task HandleValidSubmit()
    {        
        model.NameCategory = InputCategory.Name;                
        _categoryService.Save(model);
        _navigationManager.NavigateTo("/admin-category");
    }

    private void Cancel()
    {
        _navigationManager.NavigateTo("/admin-category");
    }

    private sealed class InputModel
    {
        [Required]      
        public string Name { get; set; } = "";
        [Required]
        public string UserId { get; set; } = "";
    }

}

