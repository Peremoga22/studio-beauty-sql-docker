@page "/edit-cosmetology"
@page "/edit-cosmetology/{Id:int}"

@using System.Globalization
@inject IWebHostEnvironment Env
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager _navigationManager
@inject CosmetologyService _cosmetologyService
@inject IJSRuntime _jSRuntime
@layout AdminLayout
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer

<div class="container py-4">

    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="breadcrumb-card mb-4">
        <ol class="breadcrumb mb-0">
            <li class="breadcrumb-item">
                <a class="link-accent" href="/admin-cosmetology">
                    <i class="bi bi-arrow-left-short"></i> Повернутися до категорій
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">
                @(Id == 0 ? "Додати категорію" : "Редагувати категорію")
            </li>
        </ol>
    </nav>

    <!-- Заголовок сторінки -->
    <header class="d-flex align-items-center justify-content-between flex-wrap gap-2 mb-3">
        <h3 class="page-title mb-0">EditCosmetology</h3>
        <NavLink class="btn btn-success btn-sm px-3 d-flex align-items-center"
                 href="/cosmetology-list">
            <i class="bi bi-collection me-1"></i><span class="d-none d-sm-inline">До списку</span>
        </NavLink>
    </header>

    <!-- Форми: титулка + картка (адаптивна сітка) -->
    <div class="row g-3 mb-4">
        <!-- Форма титулки сторінки -->
        <div class="col-12 col-lg-6">
            <EditForm Model="@modelTitle"
                      method="post"
                      OnSubmit="HandleValidSubmit"
                      FormName="CosmetologyTherapy"
                      class="card form-card">

                <DataAnnotationsValidator />
                <ValidationSummary class="alert alert-danger small" />

                <div class="card-body">
                    <h5 class="card-title text-center mb-3">
                        @(Id == 0 ? "Назва титулки сторінки" : "Редагувати титулку сторінки")
                    </h5>

                    <div class="mb-3">
                        <label for="InputTitlePage" class="form-label form-label-compact">
                            Назва сторінки <span class="text-danger">*</span>
                        </label>
                        <InputText id="InputTitlePage"
                                   @bind-Value="modelTitle.TitlePage"
                                   class="form-control form-control-sm"
                                   placeholder="Введіть назву..." />
                        <ValidationMessage For="@(() => modelTitle.TitlePage)" class="text-danger small" />
                    </div>

                    <div class="mb-0">
                        <label for="InputDescription" class="form-label form-label-compact">
                            Опис сторінки <span class="text-danger">*</span>
                        </label>
                        <InputText id="InputDescription"
                                   @bind-Value="modelTitle.Description"
                                   class="form-control form-control-sm"
                                   placeholder="Короткий опис..." />
                        <ValidationMessage For="@(() => modelTitle.Description)" class="text-danger small" />
                    </div>
                </div>

                <div class="card-footer d-flex justify-content-end gap-2">
                    <button type="submit" class="btn btn-primary btn-sm px-3">
                        <i class="bi bi-save"></i> <span class="d-none d-sm-inline">Зберегти</span>
                    </button>
                    <NavLink class="btn btn-outline-secondary btn-sm px-3" href="/admin-cosmetology">
                        <i class="bi bi-x-circle"></i> <span class="d-none d-sm-inline">Скасувати</span>
                    </NavLink>
                </div>
            </EditForm>
        </div>

        <!-- Форма картки послуги -->
        <div class="col-12 col-lg-6">
            <EditForm Model="@cosmetologyTherapyCard"
                      OnValidSubmit="SaveAsync"
                      class="card form-card">

                <DataAnnotationsValidator />
                <ValidationSummary class="alert alert-danger small" />

                <div class="card-body">
                    <h5 class="card-title text-center mb-3">
                        @(cosmetologyTherapyCard.Id == 0 ? "Додати нову картку" : "Редагувати картку")
                    </h5>

                    <div class="mb-3">
                        <label for="TitleCard" class="form-label form-label-compact">
                            Назва картки <span class="text-danger">*</span>
                        </label>
                        <InputText id="TitleCard"
                                   @bind-Value="cosmetologyTherapyCard.TitleCard"
                                   class="form-control form-control-sm"
                                   placeholder="Введіть назву..." />
                        <ValidationMessage For="@(() => cosmetologyTherapyCard.TitleCard)" class="text-danger small" />
                    </div>

                    <div class="mb-3">
                        <label for="DescriptionCard" class="form-label form-label-compact">
                            Опис картки <span class="text-danger">*</span>
                        </label>
                        <InputText id="DescriptionCard"
                                   @bind-Value="cosmetologyTherapyCard.DescriptionCard"
                                   class="form-control form-control-sm"
                                   placeholder="Короткий опис..." />
                        <ValidationMessage For="@(() => cosmetologyTherapyCard.DescriptionCard)" class="text-danger small" />
                    </div>

                    <div class="mb-3">
                        <label for="Price" class="form-label form-label-compact">
                            Ціна за послугу <span class="text-danger">*</span>
                        </label>
                        <div class="input-group input-group-sm">
                            <span class="input-group-text">₴</span>
                            <InputNumber id="Price"
                                         @bind-Value="cosmetologyTherapyCard.Price"
                                         class="form-control"
                                         placeholder="0" />
                        </div>
                        <small class="text-muted">Вкажіть вартість у гривнях.</small>
                        <ValidationMessage For="@(() => cosmetologyTherapyCard.Price)" class="text-danger small" />
                    </div>

                    <div class="mb-0">
                        <label class="form-label form-label-compact">Фото (jpg/jpeg/png)</label>
                        <InputFile OnChange="OnFileSelected"
                                   class="form-control form-control-sm"
                                   accept=".jpg,.jpeg,.png" />

                        @if (!string.IsNullOrEmpty(cosmetologyTherapyCard.ImageUrl))
                        {
                            <div class="mt-3 text-center">
                                <img src="@cosmetologyTherapyCard.ImageUrl"
                                     alt="preview"
                                     class="img-thumb-soft" />
                            </div>
                        }
                    </div>
                </div>

                <div class="card-footer d-flex justify-content-end gap-2">
                    <button type="submit" class="btn btn-primary btn-sm px-3">
                        <i class="bi bi-save"></i> <span class="d-none d-sm-inline">Зберегти</span>
                    </button>
                    <NavLink class="btn btn-outline-secondary btn-sm px-3" href="/cosmetology-list">
                        <i class="bi bi-x-circle"></i> <span class="d-none d-sm-inline">Скасувати</span>
                    </NavLink>
                </div>
            </EditForm>
        </div>
    </div>

    <!-- Сітка карток послуг -->
    <section>
        <h5 class="section-title mb-2">Картки послуг</h5>
        <figure class="figure m-0">
            <div class="row g-2">
                @foreach (var item in cosmetologyTherapyCards)
                {
                    <div class="col-6 col-lg-3">
                        <div class="card shadow-sm border-0 rounded-3 product-card h-100">
                            <div class="ratio ratio-1x1">
                                <img src="@item.ImageUrl"
                                     alt="@item.TitleCard"
                                     class="card-img-top object-fit-cover"
                                     loading="lazy">
                            </div>
                            <div class="card-body d-flex flex-column p-2">
                                <h6 class="card-title mb-1 text-dark fw-semibold text-truncate"
                                    title="@item.TitleCard">
                                    @item.TitleCard
                                </h6>
                                <p class="card-text text-muted mb-2 small line-clamp-2"
                                   title="@item.DescriptionCard">
                                    @item.DescriptionCard
                                </p>

                                <div class="mt-auto d-flex justify-content-end">
                                    <button class="btn btn-dark">
                                        @item.Price.ToString("C0", new System.Globalization.CultureInfo("uk-UA"))
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </figure>
    </section>
</div>

@code {
    [Parameter] 
    public int Id { get; set; }
    private CosmetologyTherapy modelTitle = new();
    private CosmetologyTherapyCard cosmetologyTherapyCard = new();
    private List<CosmetologyTherapy> cosmetologies = new();
    private List<CosmetologyTherapyCard> cosmetologyTherapyCards = new();
    private IBrowserFile? uploadedFile;
    private  const long maxSize = 5 * 1024 * 1024;

    private const long MaxSize = 5 * 1024 * 1024;
    private const string UploadsSubfolder = "uploads/cosmetology";

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
           
        }

        cosmetologyTherapyCards = await _cosmetologyService.GetAllCosmetologyTherapyCardListAsync();
        this.StateHasChanged();
    }

    private void OnFileSelected(InputFileChangeEventArgs e)
    {

        uploadedFile = e.File;
    }

    private async Task SaveAsync()
    {
        if (uploadedFile is not null)
        {
            var ext = Path.GetExtension(uploadedFile.Name)?.ToLowerInvariant();
            var allowed = new HashSet<string>(StringComparer.OrdinalIgnoreCase) { ".jpg", ".jpeg", ".png", ".webp" };
            if (string.IsNullOrWhiteSpace(ext) || !allowed.Contains(ext))
                throw new InvalidOperationException("Дозволені формати: JPG, JPEG, PNG, WEBP.");

            if (uploadedFile.Size > MaxSize)
                throw new InvalidOperationException("Файл завеликий (максимум 5 МБ).");

            var webRoot = Env.WebRootPath ?? throw new InvalidOperationException("WebRootPath недоступний.");
            var physicalFolder = Path.Combine(webRoot, UploadsSubfolder);
            Directory.CreateDirectory(physicalFolder);

            var fileName = $"{Guid.NewGuid():N}{ext}";
            var physicalPath = Path.Combine(physicalFolder, fileName);

            // Запис із дозволом на читання іншими процесами
            await using (var fs = new FileStream(physicalPath, FileMode.Create, FileAccess.Write, FileShare.Read, 81920, true))
            {
                await uploadedFile.OpenReadStream(MaxSize).CopyToAsync(fs);
            }

            // (опц.) видалити старе
            if (!string.IsNullOrEmpty(cosmetologyTherapyCard.ImageUrl))
            {
                var oldPhysical = Path.Combine(webRoot, cosmetologyTherapyCard.ImageUrl.TrimStart('/').Replace('/', Path.DirectorySeparatorChar));
                try { if (File.Exists(oldPhysical)) File.Delete(oldPhysical); } catch { /* лог або відкладити */ }
            }

            // В БД — тільки відносний веб-шлях
            cosmetologyTherapyCard.ImageUrl = "/" + Path.Combine(UploadsSubfolder, fileName).Replace("\\", "/");
            cosmetologyTherapyCard.PathFolderImageUrl = physicalFolder;
        }

        _cosmetologyService.SaveCosmetologyTherapyCard(cosmetologyTherapyCard);
        _navigationManager.NavigateTo("/cosmetology-list");
    }

    ///uploads/cosmetology/ff78aa09c7ee412d9ed9fdf81d336c75.jpg
    private async Task HandleValidSubmit()
    {
        int tempCategory = 8;
       // model.CategoryId = tempCategory;
        _cosmetologyService.SaveTitle(modelTitle);
        _navigationManager.NavigateTo("/admin-cosmetologe");
    }

    private void Cancel()
    {
        
    }
}
